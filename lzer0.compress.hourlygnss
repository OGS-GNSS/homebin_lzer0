#!/bin/tcsh
#
# Script to compress MASTER hourly GNSS data
# created  by DZ (Nov 2018)
# modified by AM (Feb 2022)
# modified by DZ (Aug 2022)
#
#********************  DEFAULTS ********************
set JOB		= `basename $0`
set CURDIR	= `pwd`
set path = ($path /usr/sbin /sbin /usr/local/bin /usr/bin /bin /home/${user}/bin .) #fundamental to run  scripts inside cron without full path commands
#
#********************  TUNING VARIABLES BEGIN ********************
set STORAGE		= /mnt/hd
set DUMPDIR		= ${STORAGE}/gnss
#
# DEFAULT PARAMS
set SITE  = ""
set YEAR  = `date +%Y`
set DOY   = `date +%j`
set HOUR  = `date +%H`
set SES   = `echo $HOUR | hr2ses`
set FORCE = "N"
set PHOURS = ""
#********************  TUNING VARIABLES END  ********************
#
# If no arguments are passed it outputs script usage
if (${%argv} == 0) then
        echo "- USAGE: $JOB  -s [SITE] -y [YEAR] -d [DOY] -h [HOUR] -l [SESSION] -p [NHOURS] -w"
	echo "  -w: to overwrite old files"
	echo "  [NHOURS]: previous hours to compress"
        echo "  e.g: $JOB -s L001"
        echo "  e.g: $JOB -s L001 -y 2022"
        echo "  e.g: $JOB -s L001 -y 2022 -h 12"
        exit 1
endif
#
# check command line params.
while($#)
        switch($1)
                case "-s":
			# Site name
			shift
			set SITE = `echo $1 | tr 'a-z' 'A-Z'`
			breaksw
		case "-y":
			# Year
                        shift
			set YEAR = $1
			breaksw
                case "-d":
                        # DOY
                        shift
                        set DOY = $1
                        breaksw
                case "-h":
                        # Hour and session
                        shift
                        set HOUR = $1
			set SES  = `echo $HOUR | hr2ses`
                        breaksw
                case "-l":
                        # Session and hour
                        shift
                        set SES  = `echo $1 | tr 'a-z' 'A-Z'`
                        set HOUR = `echo $SES | hr2ses`
                        breaksw
                case "-p":
                        #  Number of previous hours to compress
                        shift
			set PHOURS = $1
                        breaksw
                case "-w":
                        #  overwrite old file
                        set FORCE  = "Y"
                        breaksw
		default:
			shift
			breaksw
        endsw
        shift
end
if ($SITE == "") then
	echo "- Warning, you must provide at least the site name"
	exit
else
endif
set site = `echo $SITE | tr 'A-Z' 'a-z'`
set YR   = `echo $YEAR | awk '{ print substr($1,3,2) }'`
if ($PHOURS == "") then
	set ses  = `echo $SES | tr 'A-Z' 'a-z'`
        foreach ic( '' 'U' )
		set RAW = ${DUMPDIR}/${YEAR}/${DOY}/${ses}/${ic}${SITE}${ses}$YR.$DOY
		if (-e $RAW ) then
			if ( ! -e ${RAW}.bz2 ) then
				echo "${RAW}.bz2 building."
				bzip2  ${RAW}
			else
				if ($FORCE == "Y") then
					echo "${RAW}.bz2 building."
					bzip2 -f ${RAW}
				else
					echo "${RAW}.bz2 already exists."
				endif
			endif
			break
		else
			if ( -e ${RAW}.bz2 ) then
				echo "${RAW}.bz2 already exists."
				break
			endif
			echo "${RAW} not present on disk"
		endif
	end
else
	@ PHOURS = $PHOURS - 1
	foreach PHOUR (`seq $PHOURS -1 0`)
		set CurrHOUR  = `date --date="$PHOUR hour ago" +%H`
		if ($CurrHOUR == 00) then
			@ modPHOUR = $PHOUR + 1
			set CurrYEAR  = `date --date="$modPHOUR hour ago" +%Y`
                        set CurrDOY   = `date --date="$modPHOUR hour ago" +%j`
		else
			set CurrYEAR  = `date --date="$PHOUR hour ago" +%Y`
			set CurrDOY   = `date --date="$PHOUR hour ago" +%j`
		endif
		if ($FORCE == "Y") then
			lzer0.compress.hourlygnss -s $SITE -y $CurrYEAR -d $CurrDOY -h $CurrHOUR -w
		else
			lzer0.compress.hourlygnss -s $SITE -y $CurrYEAR -d $CurrDOY -h $CurrHOUR
		endif
	end
endif
