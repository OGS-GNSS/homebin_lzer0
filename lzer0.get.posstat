#!/bin/tcsh
# created  by DZ (Mar. 2019)
# modified by DZ (Aug. 2022)
# used to recover simple statistics from obs files generated by RTKLIB
set path = ($path /usr/sbin /sbin /usr/local/bin /usr/bin /bin /home/${user}/bin .) #fundamental to run  scripts inside cron without full path commands
#
# MAIN JOB VALUES
set StarTime = `date +%s`
set JOB = `basename $0`
set TMPDIR      = ${HOME}/tmp.${JOB}
#
#********************  TUNING VARIABLES BEGIN ********************
set posFile		= "" #default pos file
set crdFile		= "" #default coordinates file
set SITE		= "" #default site name
set expObs		= 3600 # number of hourly expected observations
set falseFixLim		= 0.05 # maximum distance deviation from reference point [m]
#********************  TUNING VARIABLES END  ********************
#
# If no arguments are passed it outputs script usage
if (${%argv} == 0) then
        echo "- USAGE: $JOB -s [SITE] -f [pos FILE] -c [coord. FILE] -t [threshold]"
        echo "  [SITE]: [pos FILE] must include SITE coordinates in pos format"
        echo "  [pos FILE]: pos file generated by RTKLIB code."
        echo "  [coord. FILE]: a priori coordinates FILE"
        echo "  [threshold]: threshold in [m] (default 0.05) for the difference between real time values and reference values (included in the [coord. FILE])"
        echo "  e.g: $JOB -s L001 -f $HOME/Projects/RTKLIB/example1/L001.2022.08.23.235.r.pp.pos -c $HOME/tab/station.pos"
        echo "  e.g: $JOB -s L001 -f $HOME/Projects/RTKLIB/example1/L001.2022.08.23.235.r.pp.pos -c $HOME/tab/station.pos -t 0.10"
        exit 1
endif
#
# check command line params. First one is used to set the site name, second one for brand
while($#)
        switch($1)
                case "-f":
                        #Observations File name
                        shift
                        set posFile = $1
                        breaksw
		case "-c":
			#a priori coordinate file name
			shift
			set crdFile = $1
			breaksw
                case "-s":
                        #site name
                        shift
                        set SITE = $1
                        breaksw
                case "-t":
                        #limit in [m] for difference between real time values and reference values
			shift
                        set falseFixLim = $1
                        breaksw
                default:
                        shift
                        breaksw
        endsw
        shift
end
if ("$posFile" == "" || "$SITE" == "" || "$crdFile" == "") then
        echo "- Error: one or more parameters ([SITE] and/or [pos File] and/or [coord. FILE]) are missing!"
        exit
endif

#
# Check TMPDIR
if ( ! -e ${TMPDIR} ) then
        mkdir -p ${TMPDIR}
endif
#
# Cleaning TMPDIR
rm -fR ${TMPDIR}/* >& /dev/null
#
# getting beginning hour from file name
set hourSes = `basename $posFile | gawk 'BEGIN{FS="."} {print $6}' | tr '[a-z]' '[A-Z]' | ses2hr`
@ hourSes = $hourSes - 1
set hourSes = `echo $hourSes | gawk '{if (length($0) == 1) print "0"$0} {if (length($0) == 2) print $0}'`
#
# Filtering out unwanted epochs and headers
set posFileTmp = `basename $posFile`
set posFileTmp = ${TMPDIR}/${posFileTmp}
cat $posFile | grep -v '#' | gawk '{if (substr($2,1,2) == "'"$hourSes"'") {print $0}}' >  $posFileTmp
set posFile = $posFileTmp
#
#echo "Working with: $SITE"
set site = `echo $SITE | tr 'A-Z' 'a-z'`
set SITE = `echo $site | tr 'a-z' 'A-Z'`
#
# getting coords from file
set LLH_REF = `cat $crdFile | grep -v '%' | gawk '{if ($4=="'"$SITE"'") {print $1,$2,$3}}'`
set NEU_REF = `wgs842utm33 $LLH_REF | gawk '{print $2,$1,$3}'`
#
# gain conversion assesment
set K = `echo $NEU_REF $LLH_REF | gawk '{printf "%4.9f %4.9f",$1/$4,$2/$5}'`
set obsDate = `cat $posFile | grep -v % | head -n 1 | gawk '{print $1}'`
set falseFix = `cat $posFile | grep -v % | gawk '{\
	if ((sqrt(($3*"'"$K[1]"'"-"'"$NEU_REF[1]"'")^2 + ($4*"'"$K[2]"'"-"'"$NEU_REF[2]"'")^2 + ($5-"'"$NEU_REF[3]"'")^2)>"'"$falseFixLim"'") && \
	 ($6==1)) \
	 {print "FALSE FIX"}}' | wc -l`
set obsNum  = `cat $posFile | grep -v % | gawk 'BEGIN{stdCnt=0;fltCnt=0;fixCnt=0} {if ($6==1) {fixCnt++}} {if ($6==2) {fltCnt++}} {if ($6==5) {stdCnt++}} END{print stdCnt,fltCnt,fixCnt,NR}'` #std, flt, fix,full
set obsNum  = `echo $obsNum | grep -v % | gawk '{print ($4-$3-$2-$1),$0}'` #oth,std,flt,fix,full
if ($obsNum[5] == 0) then
	exit
endif
set obsVsExpPer = `echo $obsNum $expObs | gawk '{print $5/$6*100}'` # expected Vs observed measures
set falseFixPer = `echo $obsNum $falseFix| gawk '{print $6/$4*100}'` # false Fix Vs all Fix 
set fixPer = `echo $obsNum | gawk '{print $4/$5*100}'`
set fltPer = `echo $obsNum | gawk '{print $3/$5*100}'`
set stdPer = `echo $obsNum | gawk '{print $2/$5*100}'`
set othPer = `echo $obsNum | gawk '{print $1/$5*100}'`
#echo "DATE obsVsExp OTH STD FLT FIX FALSE"
echo $obsDate $obsVsExpPer $othPer $stdPer $fltPer $fixPer $falseFixPer | gawk '{printf "%-10s %6.2f %6.2f %6.2f %6.2f %6.2f %6.2f\n",$1,$2,$3,$4,$5,$6,$7}'
#
# Removing TMPDIR
rm -fR ${TMPDIR} >& /dev/null
